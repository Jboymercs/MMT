buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'

    }
}
apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "0.4.4"
group = "com.barribob.mm" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Maelstrom Mod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    // GeckoLb Dependancy
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

}

minecraft {

    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003-1.12"

    //Access Transformers for private fields  for IsUnblockable and soundName
    accessTransformer = file('src/main/resources/mm_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    //Geckolib
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.12.2:3.0.30')
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}



jar {
    manifest {
        attributes 'FMLAT': 'mm_at.cfg'
    }
}

sourceSets {main { output.resourcesDir = output.classesDir}}