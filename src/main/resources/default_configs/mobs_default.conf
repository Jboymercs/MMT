# Elements: Azure=0 Golden=1 Crimson=2 None=3
# Summoning algorithm: this is how the bosses determine which mobs to spawn.
# nbt_spawn_data: nbt attributes such as health/speed - you can specify anything that minecraft saves as nbt.
# On any mob in this mob, adding the value: can_be_pushed=false will make mobs not pushable by other entities
# HOWEVER - it may have side effects so make sure to test thoroughly when using.

monolith {
  spawn_nexus_portal_on_death = true
  second_boss_phase_hp = 300

  # Damage is multiplied generic.attackDamage
  fireball_damage = 1.0
  laser_damage = 1.0
  defensive_burst_damage = 1.0
  fall_damage = 1.3

  summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:shade"
        max_nearby: 4
        # You can put nbt_spawn_data here to specify nbt attributes specific to when the mob is spawned by the monolith
      }
    ]
    mobs_per_spawn: 2
    spawning_area: {
      width: 2,
      height: 3
    }
    mob_cap_detection_area: {
      width: 40
      height: 3
    }
  }

  nbt_spawn_data {
    experienceValue = 1000
    Health: 600
    Attributes: [
      {Name: "generic.maxHealth", Base: 600}
      {Name: "generic.attackDamage", Base: 9}
      {Name: "generic.followRange", Base: 30}
    ]
  }
}

maelstrom_gauntlet {
  use_fireball_at_health = 340
  use_lazer_at_health = 280
  use_spawning_at_health = 220
  beam_lag = 9 # Number of ticks for the laser beam to catch up to the player given that they aren't moving
  max_laser_distance = 40 # Distance the laser can reach
  punch_impact_size = 2
  laser_explosion_size = 0

  # Damage is multiplied generic.attackDamage
  laser_damage = 1.0
  fireball_damage = 2.0
  punch_damage = 1.0

  mobs_per_spawn: 6
  summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:shade"
        spawn_weight: 3
        max_nearby: 4
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_lancer"
        spawn_weight: 2
        max_nearby: 4
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_mage"
        spawn_weight: 1
        max_nearby: 3
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_healer"
      }
    ]
    spawning_area: {
      width: 8,
      height: 12
    }
    mob_cap_detection_area: {
      width: 40
      height: 6
    }
  }

  nbt_spawn_data {
    experienceValue = 1000
    Health: 400.0
    Attributes: [
      {Name: "generic.maxHealth", Base: 400.0}
      {Name: "generic.attackDamage", Base: 12}
      {Name: "generic.followRange", Base: 64}
      {Name: "generic.flyingSpeed", Base: 0.8}
    ]
  }
}

alternative_maelstrom_gauntlet_stage_1 {
  use_fireball_at_health = 250
  use_lazer_at_health = 200
  use_spawning_at_health = 150
  punch_impact_size = 2

  beam_lag = 9 # Number of ticks for the laser beam to catch up to the player given that they aren't moving
  max_laser_distance = 50 # Distance the laser can reach
  max_fireball_distance = 35
  mobs_per_spawn: 6
  laser_explosion_size = 0

  # Damage is multiplied generic.attackDamage
  laser_damage = 1.0
  fireball_damage = 2.0
  punch_damage = 1.0

  # Prioritizes spawning mobs on the ground if there is ground. Otherwise uses aerial_summoning_algorithm to summon aerial mobs
  summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:shade"
        spawn_weight: 3
        max_nearby: 4
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_lancer"
        spawn_weight: 2
        max_nearby: 4
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_mage"
        spawn_weight: 1
        max_nearby: 3
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
    ]
    spawning_area: {
      width: 8,
      height: 12
    }
    mob_cap_detection_area: {
      width: 40
      height: 20
    }
  }

  aerial_summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:maelstrom_fury"
        max_nearby: 6
      }
    ]
    spawning_area: {
      width: 10,
      height: 10
    }
    mob_cap_detection_area: {
      width: 100
      height: 100
    }
  }

  nbt_spawn_data {
    experienceValue = 0
    Health: 300.0
    Attributes: [
      {Name: "generic.maxHealth", Base: 300.0}
      {Name: "generic.attackDamage", Base: 12}
      {Name: "generic.followRange", Base: 80}
      {Name: "generic.flyingSpeed", Base: 0.8}
    ]
  }
}

alternative_maelstrom_gauntlet_stage_2 {
  beam_lag = 9 # Number of ticks for the laser beam to catch up to the player given that they aren't moving
  max_laser_distance = 50 # Distance the laser can reach
  max_fireball_distance = 35
  mobs_per_spawn: 6
  punch_impact_size = 2
  laser_explosion_size = 0

  # Damage is multiplied generic.attackDamage
  laser_damage = 1.0
  fireball_damage = 2.0
  punch_damage = 1.0

  crystal_explosion_radius = 5
  crystal_lifespan = 100

  summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:shade"
        spawn_weight: 3
        max_nearby: 4
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_lancer"
        spawn_weight: 2
        max_nearby: 4
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
      {
        entity_id: "mm:maelstrom_mage"
        spawn_weight: 1
        max_nearby: 3
        elements: [
          {id: 2, weight: 1}
          {id: 3, weight: 4}
        ]
      }
    ]
    spawning_area: {
      width: 8,
      height: 12
    }
    mob_cap_detection_area: {
      width: 40
      height: 20
    }
  }

  aerial_summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:maelstrom_fury"
        max_nearby: 6
      }
    ]
    spawning_area: {
      width: 10,
      height: 10
    }
    mob_cap_detection_area: {
      width: 100
      height: 100
    }
  }

  nbt_spawn_data {
    experienceValue = 1000
    Health: 200.0
    Attributes: [
      {Name: "generic.maxHealth", Base: 200.0}
      {Name: "generic.attackDamage", Base: 12}
      {Name: "generic.followRange", Base: 80}
      {Name: "generic.flyingSpeed", Base: 0.8}
    ]
  }
}

maelstrom_fury {
  seconds_existed_to_be_able_to_despawn = 120
  nbt_spawn_data {
    experienceValue = 10
    Health: 20.0
    Attributes: [
      {Name: "generic.maxHealth", Base: 20.0}
      {Name: "generic.attackDamage", Base: 5}
      {Name: "generic.followRange", Base: 64}
      {Name: "generic.flyingSpeed", Base: 1.8}
    ]
  }
}

maelstrom_illager {
  first_dialog_hp = 285
  second_dialog_hp = 255
  second_boss_phase_hp = 225

  # Damage is multiplied generic.attackDamage
  maelstrom_missile_damage = 1.0
  ring_damage = 1.0
  defensive_burst_damage = 1.0

  summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:shade"
        max_nearby: 2
      }
      {
        entity_id: "mm:maelstrom_mage"
        max_nearby: 2
      }
      {
        entity_id: "mm:horror"
        max_nearby: 2
      }
    ]
    first_phase_mobs_per_spawn: 2
    second_phase_mobs_per_spawn: 1
    spawning_area: {
      width: 8,
      height: 6
    }
    mob_cap_detection_area: {
      width: 30
      height: 3
    }
  }

  nbt_spawn_data {
    experienceValue = 1000
    Health: 300.0
    Attributes: [
      {Name: "generic.maxHealth", Base: 300.0}
      {Name: "generic.attackDamage", Base: 8}
    ]
  }
}

golden_boss { # Statue of Nirvana
  first_summon_hp = 400
  second_summon_hp = 300
  third_summon_hp = 200
  fourth_summon_hp = 100
  second_phase_hp = 150

  pillar_can_be_summoned_in_air = false
  pillar_protection_range = 20

  # Damage is multiplied generic.attackDamage
  golden_missile_damage = 1.0
  golden_rune_damage = 2.0
  maelstrom_missile_damage = 1.0
  maelstrom_rune_damage = 2.0

  nbt_spawn_data {
    experienceValue = 0
    Health: 450
    Attributes: [
      {Name: "generic.maxHealth", Base: 450}
      {Name: "generic.attackDamage", Base: 8.0}
      {Name: "generic.followRange", Base: 40.0}
      {Name: "generic.flyingSpeed", Base: 0.8}
    ]
  }

  summoning_algorithm {
    mobs: [
      {
        entity_id: "mm:golden_pillar"
        max_nearby: 2
        elements: [
          {id: 1, weight: 1}
        ]
      }
    ]
    spawning_area: {
      width: 10,
      height: 10
    }
    mob_cap_detection_area: {
      width: 40
      height: 20
    }
    mobs_per_spawn: 1
  }
}

maelstrom_statue_of_nirvana { # Statue of Nirvana (Final Stage)
  # Damage is multiplied generic.attackDamage
  maelstrom_missile_damage = 1.0
  maelstrom_rune_damage = 2.0
  homing_projectile_damage = 1.0

  nbt_spawn_data {
    experienceValue = 1000
    Health: 150
    Attributes: [
      {Name: "generic.maxHealth", Base: 150}
      {Name: "generic.attackDamage", Base: 9.0}
      {Name: "generic.followRange", Base: 40.0}
      {Name: "generic.flyingSpeed", Base: 0.8}
    ]
  }
}

maelstrom_beast { # Maelstrom Minotaur
  second_phase_hp = 150
  swipe_width: 1

  # Damage is multiplied generic.attackDamage
  hammer_wave_damage = 1.0
  bone_hammer_wave_damage = 1.0
  swipe_damage = 1.0
  high_leap_fireball_damage = 1.0
  bone_projectile_damage = 0.5

  spawning_algorithm {
    mobs: [
      {
        entity_id: "mm:floating_skull"
        max_nearby: 2
      }
    ]
    spawning_area: {
      width: 8,
      height: 6
    }
    mob_cap_detection_area: {
      width: 40
      height: 3
    }
  }

  nbt_spawn_data {
    experienceValue = 1000
    Health: 400
    Attributes: [
      {Name: "generic.maxHealth", Base: 400}
      {Name: "generic.attackDamage", Base: 11.0}
      {Name: "generic.followRange", Base: 30.0}
    ]
  }
}

shade { # Maelstrom Scout
  nbt_spawn_data {
    experienceValue = 10
    Health: 25
    Attributes: [
      {Name: "generic.maxHealth", Base: 25}
      {Name: "generic.attackDamage", Base: 6}
      {Name: "generic.knockbackResistance", Base: 0.3}
      {Name: "generic.movementSpeed", Base: 0.26}
    ]
  }
}

horror { # Maelstrom Cauldron
  nbt_spawn_data {
    experienceValue: 10
    Health: 25
    Attributes: [
      {Name: "generic.maxHealth", Base: 25}
      {Name: "generic.attackDamage", Base: 7}
    ]
  }
}

maelstrom_crawler {
  # Damage is multiplied generic.attackDamage
  spit_damage = 0.5
  leap_damage = 1.0

  nbt_spawn_data {
    experienceValue: 100
    Health: 250
    Attributes: [
      {Name: "generic.maxHealth", Base: 250}
      {Name: "generic.attackDamage", Base: 8}
      {Name: "generic.knockbackResistance", Base: 0.5}
      {Name: "generic.followRange", Base: 30.0}
    ]
  }
}

maelstrom_mage {
  nbt_spawn_data {
    experienceValue: 10
    Health: 20
    Attributes: [
      {Name: "generic.attackDamage", Base: 6.0}
      {Name: "generic.followRange", Base: 25.0}
    ]
  }
}

floating_skull {
  nbt_spawn_data {
    experienceValue: 10
    Attributes: [
      {Name: "generic.attackDamage", Base: 4.0}
    ]
  }
}

azure_golem { # Fracture Golem
  nbt_spawn_data {
    experienceValue: 100
    Health: 250
    Level: 2.0
    Attributes: [
      {Name: "generic.maxHealth", Base: 250}
      {Name: "generic.attackDamage", Base: 15}
      {Name: "generic.movementSpeed", Base: 0.3}
      {Name: "generic.followRange", Base: 20.0}
      {Name: "generic.knockbackResistance", Base: 1.0}
    ]
  }
}

golden_pillar {
  nbt_spawn_data {
    experienceValue: 10
    Health: 40
    Attributes: [
      {Name: "generic.followRange", Base: 40.0}
      {Name: "generic.knockbackResistance", Base: 1.0}
      {Name: "generic.attackDamage", Base: 7}
      {Name: "generic.maxHealth", Base: 40}
    ]
  }
}

maelstrom_witch {
  nbt_spawn_data {
    experienceValue: 100
    Health: 150
    Attributes: [
      {Name: "generic.maxHealth", Base: 150}
      {Name: "generic.attackDamage", Base: 4}
    ]
  }
}

cliff_golem {
  nbt_spawn_data {
    experienceValue: 100
    Health: 250
    Attributes: [
      {Name: "generic.maxHealth", Base: 250}
      {Name: "generic.attackDamage", Base: 18}
      {Name: "generic.movementSpeed", Base: 0.3}
      {Name: "generic.followRange", Base: 30.0}
      {Name: "generic.knockbackResistance", Base: 1.0}
    ]
  }
}

iron_shade { # Maelstrom Executioner
  # Damage is multiplied generic.attackDamage
  flip_damage = 1.0
  spin_damage = 1.0

  nbt_spawn_data {
    experienceValue: 100
    Health: 200
    Attributes: [
      {Name: "generic.maxHealth", Base: 200}
      {Name: "generic.attackDamage", Base: 9}
      {Name: "generic.knockbackResistance", Base: 0.2}
      {Name: "generic.followRange", Base: 20.0}
      {Name: "generic.movementSpeed", Base: 0.24}
    ]
  }
}

herobrine_1 {
  spin_damage = 1.0
}

maelstrom_lancer {
  nbt_spawn_data {
    experienceValue: 10
    Attributes: [
      {Name: "generic.attackDamage", Base: 8.0}
      {Name: "generic.movementSpeed", Base: 0.26}
    ]
  }
}

maelstrom_healer {
  nbt_spawn_data {
    experienceValue: 10
    Health: 25
    Attributes: [
      {Name: "generic.maxHealth", Base: 25}
      {Name: "generic.attackDamage", Base: 3}
      {Name: "generic.followRange", Base: 30.0}
      {Name: "generic.movementSpeed", Base: 0.26}
    ]
  }
}

chaos_knight { # Maelstrom Champion
  slam_explosion_strength = 2.0
  swipe_width = 1

  # Damage is multiplied generic.attackDamage
  single_swipe_damage = 1.0
  leap_slam_damage = 1.5
  dash_damage = 1.5
  spin_slash_damage = 1.0
  meteor_damage = 1.0

  nbt_spawn_data {
    experienceValue: 1000
    Health: 450
    Attributes: [
      {Name: "generic.maxHealth", Base: 450}
      {Name: "generic.attackDamage", Base: 9}
      {Name: "generic.followRange", Base: 30.0}
      {Name: "generic.knockbackResistance", Base: 1}
    ]
  }
}

maelstrom_knight { #Maelstrom Knight
mk_explosion = 1.0
mk_projectile = 0.5

# Damage is multiplied generic.attackDamage
mk_strike_damage = 1.0
mk_kick_damage = 0.5
mk_circle_spin = 1.5
mk_slash_damage = 0.7
mk_leap_damage = 1.7

nbt_spawn_data {
experienceValue: 300
Health: 250
Attributes: [
    {Name: "generic.maxHealth", Base: 250}
    {Name: "generic.attackDamage", Base: 9}
    {Name: "generic.followRange", Base: 30.0}
    {Name: "generic.knockbackResistance", Base: 1}
    ]
  }
}


config_version=0.4.1.7